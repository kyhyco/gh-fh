#!/usr/bin/env bash
set -e

FUZZYHUB_DIR=$(dirname "$(readlink -f "$0")")

source "$FUZZYHUB_DIR/commands/checkout.sh"
source "$FUZZYHUB_DIR/commands/delete.sh"
source "$FUZZYHUB_DIR/commands/pr.sh"
source "$FUZZYHUB_DIR/commands/prune.sh"
source "$FUZZYHUB_DIR/commands/push.sh"
source "$FUZZYHUB_DIR/commands/remote.sh"
source "$FUZZYHUB_DIR/commands/sync.sh"
source "$FUZZYHUB_DIR/commands/view.sh"

VERSION=$(cat $FUZZYHUB_DIR/VERSION; echo )

__fh-print-commands() {
  cat << EOF
Fuzzyhub v$VERSION

Usage: fh <option>

Options:
  checkout       - Checkout branch
  view           - View folder/files in the browser

  pr checkout    - Checkout PR branch
  pr view        - View PR in the browser

  prune          - Prune merged branches
  push           - Push to origin by default
  delete         - Delete branches
  sync           - Sync main/master branch

  remote add     - Add forked repositories to remote
  remote delete  - Delete remote

  update         - Update Fuzzyhub
  version        - Print version
EOF
}

if [[ -z $1 ]]; then
  __fh-print-commands
  exit 0
fi

if ! git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
  echo "fatal: not a git repository (or any of the parent directories): .git"
  exit 1
fi

if [[ ! -z $1 ]]; then
  option=$1
  shift
  rest=("$@")
fi

if [[ $option == "checkout" ]]; then
  __fh-checkout "${rest[@]}"

elif [[ $option == "view" ]]; then
  __fh-view "${rest[@]}"

elif [[ $option == "pr" ]]; then
  __fh-pr "${rest[@]}"

elif [[ $option == "sync" ]]; then
  __fh-sync

elif [[ $option == "delete" ]]; then
  __fh-delete

elif [[ $option == "prune" ]]; then
  __fh-prune

elif [[ $option == "push" ]]; then
  __fh-push "${rest[@]}"

elif [[ $option == "remote" ]]; then
  __fh-remote "${rest[@]}"

elif [[ $option == "version" ]]; then
  echo "v$VERSION"

elif [[ $option == "upgrade" ]]; then
  gh extension upgrade fh

else
  __fh-print-commands
  exit 1
fi
